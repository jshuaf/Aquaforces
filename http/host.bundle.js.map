{"version":3,"sources":["webpack:///webpack/bootstrap aa310746a09d1f66fc8c?d01b*","webpack:///./http/host/index.jsx"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;ACtCA","file":"host.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap aa310746a09d1f66fc8c\n **/","/*\nconst socket = new WebSocket((location.protocol ===\n\t'http:' ? 'ws://' : 'wss://') + location.hostname +\n\t(location.port !== 80 ? ':' + location.port : '') + '/host/');\nconst cont = document.getElementById('cont');\n\nconst crews = {};w\nconst usersWithoutCrews = [];\n\nlet gameHost;\nlet gameHasStarted = false;\n\nfunction setState(id) {\n\t// hide and show different elements\n\tcont.children.forEach(function (e) {\n\t\tif (e.id !== id) e.hidden = true;\n\t});\n\tdocument.getElementById(id).hidden = false;\n}\n\nfunction removeUserFromGame() {\n\tconst userToRemove = this.dataset.username;\n\tsocket.send(JSON.stringify({\n\t\tevent: 'removeUser',\n\t\tuser: userToRemove,\n\t}));\n\tthis.parentNode.removeChild(this);\n\n\tfor (let i = 0; i < usersWithoutCrews.length; i++) {\n\t\tconst username = usersWithoutCrews[i];\n\t\tif (userToRemove === username) {\n\t\t\tusersWithoutCrews.splice(usersWithoutCrews.indexOf(username), 1);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction removeUserFromCrew() {\n\tif (gameHasStarted) {\n\t\treturn;\n\t}\n\tsocket.send(JSON.stringify({\n\t\tevent: 'removeUserFromCrew',\n\t\tuser: this.dataset.username,\n\t}));\n\tconst li = document.createElement('li');\n\tli.dataset.username = this.dataset.username;\n\tli.appendChild(document.createTextNode(this.dataset.username));\n\tli.onclick = removeUserFromGame;\n\tdocument.getElementById('loneusers').appendChild(li);\n\tthis.parentNode.dataset.n--;\n\tthis.parentNode.removeChild(this);\n\n\tfor (const crewNumber in crews) {\n\t\tconst crewmembers = crews[crewNumber].users;\n\t\tfor (const crewmember of crewmembers) {\n\t\t\tif (crewmember === this.dataset.username) {\n\t\t\t\tcrewmembers.splice(crewmembers.indexOf(crewmember), 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction confirmMessageRecieved() {\n\tsocket.send(JSON.stringify({ event: 'messageRecieved' }));\n}\n\nsocket.onmessage = function (m) {\n\ttry {\n\t\tm = JSON.parse(m.data);\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\treturn sweetAlert('Socket error.', 'error');\n\t}\n\n\tconfirmMessageRecieved();\n\n\tswitch (m.event) {\n\tcase 'ping':\n\t\tbreak;\n\tcase 'error':\n\t\tsweetAlert(m.title, m.text, 'error');\n\t\tbreak;\n\tcase 'newGame':\n\t\tdocument.getElementById('game-code-cont').appendChild(document.createTextNode(m.id));\n\t\tsetState('tgame');\n\t\tbreak;\n\tcase 'addNewUser':\n\t\tconst li = document.createElement('li');\n\t\tli.dataset.username = m.user;\n\t\tli.appendChild(document.createTextNode(m.user));\n\t\tli.onclick = removeUserFromGame;\n\t\tdocument.getElementById('loneusers').appendChild(li);\n\t\tusersWithoutCrews.push(m.user);\n\t\tbreak;\n\tcase 'addUserToCrew':\n\t\tdocument.getElementById('loneusers').childNodes.forEach(function (e) {\n\t\t\tif (e.firstChild.nodeValue === m.user) e.parentNode.removeChild(e);\n\t\t});\n\t\tconst span = document.createElement('span');\n\t\tspan.dataset.username = m.user;\n\t\tspan.className = 'clickable pill';\n\t\tspan.onclick = removeUserFromCrew;\n\t\tspan.appendChild(document.createTextNode(m.user));\n\t\tdocument.getElementById('crews').children[m.crew - 1].appendChild(span);\n\t\tdocument.getElementById('crews').children[m.crew - 1].dataset.n++;\n\t\tif (m.crew in crews) {\n\t\t\tcrews[m.crew].users.push(m.user);\n\t\t} else {\n\t\t\tcrews[m.crew] = {\n\t\t\t\tname: 'Crew ' + (m.crew).toString(),\n\t\t\t\tusers: [m.user],\n\t\t\t\tposition: 0,\n\t\t\t\tstatus: 'rowing',\n\t\t\t\tboat: 'canoe',\n\t\t\t};\n\t\t}\n\t\tbreak;\n\tcase 'startGame':\n\t\tdocument.getElementById('cont').hidden = true;\n\t\tsetState('mountNode');\n\t\tgameHasStarted = true;\n\t\tgameHost = ReactDOM.render(<GameHost initialCrews={crews} />, document.getElementById('mountNode'));\n\t\tbreak;\n\tcase 'answerSelected':\n\t\tgameHost.answerSelected(m.wasCorrectAnswer, m.crewNumber);\n\n\t\tbreak;\n\tcase 'whirlpoolStatusChanged':\n\t\tgameHost.whirlpoolStatusChanged(m.status, m.crewNumber);\n\t\tbreak;\n\tcase 'removeUser':\n\t\tconst e = document.querySelector('[data-username=' + JSON.stringify(m.user) + ']');\n\t\tif (e) {\n\t\t\te.parentNode.removeChild(e);\n\t\t\t// if (e.parentNode.dataset.n) e.parentNode.dataset.n--;\n\t\t}\n\t\tbreak;\n\t}\n};\n\nsocket.onclose = () => {\n\tsweetAlert('Server connection died.', \"We're sorry about that.\", 'error');\n};\ndocument.getElementById('dashboard').addEventListener('submit', function (e) {\n\tdocument.getElementById('newGameButton').disabled = true;\n\te.preventDefault();\n\tsocket.send(JSON.stringify({ event: 'newGame' }));\n});\n\ndocument.getElementById('startGameButton').addEventListener('click', function (e) {\n\tdocument.getElementById('startGameButton').disabled = true;\n\te.preventDefault();\n\tsocket.send(JSON.stringify({\n\t\tevent: 'startGame',\n\t}));\n\t// MARK: figure out our html\n});\nfunction endGame() {\n\tsocket.send(JSON.stringify({\n\t\tevent: 'endGame',\n\t}));\n}*/\n\n\n\n/** WEBPACK FOOTER **\n ** ./http/host/index.jsx\n **/"],"sourceRoot":""}